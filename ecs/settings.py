"""
Django settings for ecs project.

Generated by 'django-admin startproject' using Django 2.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from firebase_admin import initialize_app
from firebase_admin import credentials
import firebase_admin
from firebase_admin import credentials
import json
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Load secrets
with open(os.path.join(BASE_DIR, 'secret.json')) as f:
    secrets = json.load(f)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = secrets['SECRET_KEY']
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    #'django_admin_tailwind',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'access_management',
    'authentication',
    'customers',
    'common',
    'devices',
    'sites',
    'report',
    'notification',
    'corsheaders',
    'recurrence',
    'django_crontab',
    'fcm_django'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

ROOT_URLCONF = 'ecs.urls'
CSRF_TRUSTED_ORIGINS = [
    'https://quetzal-correct-yeti.ngrok-free.app', 
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecs.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases
# if 'RDS_HOSTNAME' in os.environ:
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': secrets['NAME'],
        'USER': secrets['User'],
        'PASSWORD': secrets['DATABASE_PASSWORD'],
        'HOST': secrets['RDS_HOSTNAME'],
        'PORT': '5432',
    }
}
# else:
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.postgresql_psycopg2',
#             'NAME': 'postgres',
#             'USER': 'postgres',
#             'PASSWORD': secrets['DATABASE_PASSWORD'],
#             'HOST': 'awseb-e-bparfxz5w4-stack-awsebrdsdatabase-wnezjup11xlx.c1guujpkpu7r.ap-south-1.rds.amazonaws.com',
#             'PORT': '5432',
#         }
#     }

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ]
}

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
        "LOCATION": "ecs-cache",
        "TIMEOUT": 300,
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = 'static'


CRONJOBS = [
    ('*/1 * * * *', 'notification.v1.cron.my_scheduled_job')
]

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'file': {
#             'level': 'DEBUG',
#             'class': 'logging.FileHandler',
#             'filename': '/Users/jivanpatel/ecs/ecs/log_file.log',  # Replace with your desired log file path
#         },
#     },
#     'loggers': {
#         'django_crontab': {
#             'handlers': ['file'],
#             'level': 'NOTSET',  # Adjust the log level as per your requirement
#             'propagate': True,
#         },
#     },
# }

SILENCED_SYSTEM_CHECKS = ['models.W042','models.W04','models.W042','fields.E010']

GOOGLE_APPLICATION_CREDENTIALS = os.path.join(BASE_DIR, "ecs", "ecs-fcm-915e0-firebase-adminsdk-fbsvc-af60fccc68.json")
if not firebase_admin._apps:
    cred = credentials.Certificate(GOOGLE_APPLICATION_CREDENTIALS)
    FIREBASE_APP = firebase_admin.initialize_app(cred)

# fcm-django or pyfcm legacy key (optional, can remove if only using firebase_admin)
# FCM_DJANGO_SETTINGS = {
#     "FCM_SERVER_KEY": "AAAAzPeEG7o:APA91bFceyMJVvz__ufTkYlwFGwUMlBgL9RYLOPR737gYSqT89KpmrlWRtpq5KQefY4djvI_66UZqsHfiOxi_8UK-i153p5yxtIbxTvJy8uqEeIhZeaxaKaeG6e4zQYCIEZdjC7Z8jNb"
# }
# FIREBASE_SERVER_KEY = FCM_DJANGO_SETTINGS["FCM_SERVER_KEY"]

AWS_ACCESS_KEY_ID = secrets['AWS_ACCESS_KEY_ID']
AWS_SECRET_ACCESS_KEY = secrets['AWS_SECRET_ACCESS_KEY']
AWS_DEFAULT_REGION = secrets['AWS_DEFAULT_REGION']

